name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.next_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine next image tag
        id: tag
        run: |
          LAST_TAG=$(git tag | grep '^v[0-9]\+$' | sed 's/v//' | sort -n | tail -n 1)
          if [ -z "$LAST_TAG" ]; then
            NEXT_TAG=1
          else
            NEXT_TAG=$((LAST_TAG + 1))
          fi
          echo "next_tag=v$NEXT_TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          echo "Building Docker image with tags: latest and ${{ steps.tag.outputs.next_tag }}"
          docker buildx build --load \
            -t "${{ secrets.DOCKER_USERNAME }}/kargo:latest" \
            -t "${{ secrets.DOCKER_USERNAME }}/kargo:${{ steps.tag.outputs.next_tag }}" \
            .

      - name: Push Docker images
        run: |
          docker push "${{ secrets.DOCKER_USERNAME }}/kargo:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/kargo:${{ steps.tag.outputs.next_tag }}"

      - name: Create Git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "${{ steps.tag.outputs.next_tag }}"
          git push origin "${{ steps.tag.outputs.next_tag }}"

  # update-deployment:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout GitOps repository
  #       uses: actions/checkout@v3
  #       with:
  #         repository: santhoshsandy1920/application-gitops
  #         token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #         path: gitops

  #     - name: Update deployment.yaml with new image tag
  #       run: |
  #         cd gitops/environments/dev
  #         sed -i "s|image: .*|image: docker.io/${{ secrets.DOCKER_USERNAME }}/kargo:${{ needs.build-and-push.outputs.tag }}|" deployment.yaml

  #     - name: Commit and push changes
  #       run: |
  #         cd gitops
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@github.com"
  #         git add .
  #         git commit -m "Update dev image to kargo:${{ needs.build-and-push.outputs.tag }}"
  #         git push
